---
- name: Check preconditions
  assert:
    that:
    - docker_projects_dir is defined
    - build_ip_addr is defined
    - testssh_ip_addr is defined
    - buildsystem_ssh_prod_user_password is defined
    - buildsystem_ssh_root_user_password is defined
    - buildsystem_database_root_password is defined
    - docker_restore_config_base_dir is defined

- name: Make directory for checkout
  file:
    mode: 0775
    path: "{{ docker_projects_dir }}"
    state: directory


- name: Clone Git repos
  git:
    repo: "{{ item.value.url }}"
    dest: "{{ docker_projects_dir }}/{{ item.value.dir_name }}"
    force: yes
  with_dict: "{{ build_system_docker_repos }}"


- import_tasks: docker_containers/datacontainer_buildsystem.yml
- import_tasks: docker_containers/datacontainer_database.yml
#- import_tasks: docker_containers/datacontainer_ipkg.yml
- import_tasks: docker_containers/datacontainer_iso.yml
- import_tasks: docker_containers/datacontainer_ncdrelease.yml
- import_tasks: docker_containers/datacontainer_testclient.yml
- import_tasks: docker_containers/datacontainer_tftp.yml

- import_tasks: docker_containers/server_database.yml
- import_tasks: docker_containers/service_cron.yml
- import_tasks: docker_containers/server_tftp.yml
- import_tasks: docker_containers/server_ssh.yml
- import_tasks: docker_containers/server_http.yml
- import_tasks: docker_containers/server_ssh_prod.yml

- import_tasks: docker_containers/service_backup.yml

- import_tasks: docker_containers/server_database_ddio.yml
- import_tasks: docker_containers/server_tftp_ddio.yml

- name: Copy Build System default ssh key to user directroy
  fetch:
    src: "{{ docker_projects_dir }}/{{ build_system_docker_repos.TestStation_ssh_server.dir_name }}/id_rsa_buildsystem"
    dest: ~/.ssh/id_rsa_buildsystem_default
    flat: yes

- name: Setting ssh key file permissions
  become: false
  local_action:
    module: file
    path: ~/.ssh/id_rsa_buildsystem_default
    mode: 0600

- name: docker_container.conf dir
  file:
    state: directory
    path: '{{ docker_restore_config_base_dir }}/buildsystem'
    owner: root
    group: root
    mode: 'u=rwx,g=rx,o=rx'
    recurse: no

# *****************************************************************************
# backup script part

- name: Assemble dir for backup scripts
  file:
    path: /usr/libexec/bacula/backup-scripts
    state: directory

- name: Create before_backup script for the Build System
  template:
    src: before_backup_buildsystem.j2
    dest: /usr/libexec/bacula/backup-scripts/56.before_backup.buildsystem

- name: Create before_backup script for DDIO
  template:
    src: before_backup_ddio.j2
    dest: /usr/libexec/bacula/backup-scripts/56.before_backup.ddio

- name: Create before_backup script for the Support Site
  template:
    src: before_backup_supportsite.j2
    dest: /usr/libexec/bacula/backup-scripts/56.before_backup.supportsite

- name: Create after_backup script for the Build System
  template:
    src: after_backup_buildsystem.j2
    dest: /usr/libexec/bacula/backup-scripts/56.after_backup.buildsystem

- name: Create after_backup script for DDIO
  template:
    src: after_backup_ddio.j2
    dest: /usr/libexec/bacula/backup-scripts/56.after_backup.ddio

- name: Create after_backup script for the Support Site
  template:
    src: after_backup_supportsite.j2
    dest: /usr/libexec/bacula/backup-scripts/56.after_backup.supportsite


# *****************************************************************************
# update the Docker restore config

- name: exists - state file
  stat:
    path: '{{ docker_restore_config_base_dir }}/buildsystem/restore.date.txt'
    get_checksum: False
    get_md5: False
  register: st_buildsystem_restore

# *****************************************************************************
# restore?

- import_tasks: restore.yml
  when: st_buildsystem_restore.stat.exists == False
